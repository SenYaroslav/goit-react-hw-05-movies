{"version":3,"file":"static/js/33.2116b278.chunk.js","mappings":"2PAGaA,EAAYC,EAAAA,GAAAA,IAAH,0CAITC,EAAUD,EAAAA,GAAAA,IAAH,yCAIPE,EAAcF,EAAAA,GAAAA,IAAH,mGAMXG,EAAOH,EAAAA,GAAAA,EAAH,iLAWJI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,qS,kBCgDrB,EAtEqB,WAAO,IAAD,IACzB,GAA0BM,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRC,EAAaL,EACd,GAAE,CAACA,IAEJ,IAAMK,EAAe,SAAAC,IACnBC,EAAAA,EAAAA,IAAgBD,GACbE,MAAK,SAAAC,GAAG,OAAIV,EAASU,EAAIC,KAAjB,IACRC,MAAMC,QAAQC,IAClB,EAEKC,EAAY,oBAAGZ,EAASa,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,8BACGlB,IACC,iCACE,UAAC,EAAD,YACE,UAAC,EAAD,YACE,UAAC,EAAD,CAAamB,GAAIH,EAAjB,WACE,SAAC,MAAD,IADF,eAGA,gBACEI,IAAG,0CAAqCpB,EAAMqB,aAC9CC,IAAI,GACJ,YAAU,cAGd,UAAC,EAAD,YACE,wBAAKtB,EAAMuB,SACX,SAAC,EAAD,UAAUvB,EAAMwB,aAAaC,MAAM,EAAG,MACtC,yCACc,0BAAOzB,EAAM0B,aAAaC,QAAQ,SAEhD,sCACA,uBAAI3B,EAAM4B,YACV,oCACA,uBAAI5B,EAAM6B,OAAOC,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,eAGlD,UAAC,EAAD,YACE,wBACE,oDAEF,2BACE,yBACE,SAAC,EAAD,CAAab,GAAG,OAAOF,MAAO,CAAEb,SAAAA,GAAhC,qBAIF,yBACE,SAAC,EAAD,CAAae,GAAG,UAAUF,MAAO,CAAEb,SAAAA,GAAnC,8BAMN,SAAC,EAAD,WACE,SAAC,KAAD,UAMX,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n`;\n\nexport const Wrapper = styled.div`\n  margin: 15px;\n`;\n\nexport const WrapperInfo = styled.div`\n  box-sizing: border-box;\n  padding: 15px;\n  background-color: #e4ebef;\n`;\n\nexport const Year = styled.p`\n  padding: 5px;\n  width: 50px;\n  font-size: 16px;\n  font-weight: 700;\n  text-align: center;\n  border-radius: 15px;\n\n  background-color: #d3e2ea;\n`;\n\nexport const LinkItem = styled(Link)`\n  display: block;\n  margin-bottom: 10px;\n  color: #212121;\n  text-decoration: none;\n  // height: 20px;\n\n  &.active {\n    color: #565656;\n    text-decoration: underline;\n  }\n\n  &:hover:not(.active),\n  :focus-visible:not(.active) {\n    color: #565656;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from 'services/moviesApi';\nimport * as sc from './MovieDetails.styled';\nimport { HiOutlineReply } from 'react-icons/hi';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieById(movieId);\n  }, [movieId]);\n\n  const getMovieById = id => {\n    getMovieDetails(id)\n      .then(res => setMovie(res.data))\n      .catch(console.log);\n  };\n\n  const BackLinkHref = location.state?.from ?? '/';\n\n  return (\n    <>\n      {movie && (\n        <>\n          <sc.Container>\n            <sc.Wrapper>\n              <sc.LinkItem to={BackLinkHref}>\n                <HiOutlineReply /> Go back\n              </sc.LinkItem>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt=\"\"\n                max-width=\"350px\"\n              />\n            </sc.Wrapper>\n            <sc.Wrapper>\n              <h2>{movie.title}</h2>\n              <sc.Year>{movie.release_date.slice(0, 4)}</sc.Year>\n              <p>\n                User score: <span>{movie.vote_average.toFixed(2)}</span>\n              </p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <p>{movie.genres.map(({ name }) => name).join(', ')}</p>\n            </sc.Wrapper>\n          </sc.Container>\n          <sc.WrapperInfo>\n            <p>\n              <b>Aditional information</b>\n            </p>\n            <ul>\n              <li>\n                <sc.LinkItem to=\"cast\" state={{ location }}>\n                  Cast\n                </sc.LinkItem>\n              </li>\n              <li>\n                <sc.LinkItem to=\"reviews\" state={{ location }}>\n                  Reviews\n                </sc.LinkItem>\n              </li>\n            </ul>\n          </sc.WrapperInfo>\n          <sc.Wrapper>\n            <Outlet />\n          </sc.Wrapper>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Container","styled","Wrapper","WrapperInfo","Year","LinkItem","Link","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","getMovieById","id","getMovieDetails","then","res","data","catch","console","log","BackLinkHref","state","from","to","src","poster_path","alt","title","release_date","slice","vote_average","toFixed","overview","genres","map","name","join"],"sourceRoot":""}